/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI_Drug_Supplier;

import Business.EcoCommunity;
import Enterprise.Enterprise_class;
import Network.Network_class;
import Organization.drug_org_class;
import Organization.org_class;
import User_account.User_account_class;
import WorkQueue.Drug_class_workrequest;
import WorkQueue.Workrequest_class;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author dpsmv
 */
public class Workspace_Drug_Supplier extends javax.swing.JPanel {

    /**
     * Creates new form Workspace_Drug_Supplier
     */
    
    
    private JPanel userProcessContainer;
    private EcoCommunity business;
    private User_account_class userAccount;
    private drug_org_class drugOrganization;
    private Enterprise_class enterprise;
    private Network_class network;
    private static Logger log = Logger.getLogger(Workspace_Drug_Supplier.class);
    private static final String CLASS_NAME = Workspace_Drug_Supplier.class.getName();

    
    public Workspace_Drug_Supplier(
            JPanel userProcessContainer, EcoCommunity business, User_account_class userAccount, 
            org_class organization, Enterprise_class enterprise, Network_class network) {
              initComponents();
              
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.enterprise = enterprise;
        this.network = network;
        this.drugOrganization = (drug_org_class) organization;
        log.debug(userAccount+" "+"logged in drug work area");
        generateTable();
    }

    
    public void generateTable() {

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        for (Workrequest_class request : drugOrganization.getWorkQueue_class().getWork_Request_List()) {
            if ((( Drug_class_workrequest) request).getPatient() == null) {
                Object[] row = new Object[6];
                row[0] = ((Drug_class_workrequest) request);
                row[1] = ((Drug_class_workrequest) request).getDrug_Quantity();
                row[2] = request.getWorkrequest_sender().getEmployee().getEmpName();
                row[3] = request.getWorkrequest_receiver()== null ? null : request.getWorkrequest_receiver().getEmployee().getEmpName();
                row[4] = request.getWorkrequest_status();
                row[5] = ((Drug_class_workrequest) request).getDelivery_Time();

                model.addRow(row);
            }
        }

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDrugSupplierworkspace = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnRequestChemical = new javax.swing.JButton();
        btnViewLabResults = new javax.swing.JButton();
        btnAddDrug = new javax.swing.JButton();

        lblDrugSupplierworkspace.setText("Drug Supplier workspace");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Quantity", "Sender", "Reciever", "Status", "Date of delivery"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnRequestChemical.setText("Request Chemical");
        btnRequestChemical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestChemicalActionPerformed(evt);
            }
        });

        btnViewLabResults.setText("View Lab Results");
        btnViewLabResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewLabResultsActionPerformed(evt);
            }
        });

        btnAddDrug.setText("Add Drug");
        btnAddDrug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDrugActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRefresh)
                        .addGap(337, 337, 337))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(332, 332, 332)
                        .addComponent(lblDrugSupplierworkspace))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(btnAssign)
                        .addGap(155, 155, 155)
                        .addComponent(btnProcess)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnViewLabResults)
                    .addComponent(btnRequestChemical)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddDrug)
                        .addGap(14, 14, 14)))
                .addGap(309, 309, 309))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(lblDrugSupplierworkspace)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssign)
                    .addComponent(btnProcess)
                    .addComponent(btnRefresh))
                .addGap(32, 32, 32)
                .addComponent(btnRequestChemical)
                .addGap(18, 18, 18)
                .addComponent(btnViewLabResults)
                .addGap(18, 18, 18)
                .addComponent(btnAddDrug)
                .addContainerGap(121, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        
         int selectedRow = jTable1.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
            return;
        }

        Drug_class_workrequest request = (Drug_class_workrequest) jTable1.getValueAt(selectedRow, 0);
        if (jTable1.getValueAt(selectedRow, 4) == null) {
            JOptionPane.showMessageDialog(null, "Task is not assigned to you for process");
            return;
        }
        int flag = 0;

        if (jTable1.getValueAt(selectedRow, 4).equals("Processing") && userAccount.getUserName().equalsIgnoreCase(request.getWorkrequest_receiver().toString())) {

            flag = 1;
        }
        if (flag != 1) {
            if (jTable1.getValueAt(selectedRow, 4) != null) {

                if (!(((jTable1.getValueAt(selectedRow, 4).equals("Assigned"))) && (userAccount.getUserName().equalsIgnoreCase(request.getWorkrequest_receiver().toString())))) {
                    JOptionPane.showMessageDialog(null, "Task is not assigned to you for process");
                    return;
                }
            }
        }

        request.setWorkrequest_status("Processing");

        ProcessWorkRequestForDrugPanel processWorkRequestJPanel = new ProcessWorkRequestForDrugPanel(userProcessContainer, request);
        userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        log.debug(userAccount+" "+"entering processing page");
        layout.next(userProcessContainer);
        
        
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        
         int selectedRow = jTable1.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a row ");
            return;
        }
        //to check whether the the task is already assigned list 
        if (jTable1.getValueAt(selectedRow, 4) != null) {

            if (jTable1.getValueAt(selectedRow, 4).equals("Assigned")) {
                JOptionPane.showMessageDialog(null, "Task is already assigned");
                return;
            }
        }
        //to set the falg if already theere existing job
        int flag = 0;
        for (Workrequest_class request : drugOrganization.getWorkQueue_class().getWork_Request_List()) {

            if (request.getWorkrequest_status()== null) {
                continue;
            }
            if (request.getWorkrequest_status().equals("Assigned")) {
                if (request.getWorkrequest_receiver()!= null) {
                    if (userAccount.getUserName().equalsIgnoreCase(request.getWorkrequest_receiver().toString())) {
                        flag = 1;
                    }
                }
            }
        }
        if (flag == 1) {
            JOptionPane.showMessageDialog(null, "Please complete the existing request before taking a new request");
            return;

        }
        int flag1 = 0;
        for (Workrequest_class request : drugOrganization.getWorkQueue_class().getWork_Request_List()) {

            if (request.getWorkrequest_status()== null) {
                continue;
            }
            if (request.getWorkrequest_status().equals("Processing")) {
                if (request.getWorkrequest_receiver()!= null) {
                    if (userAccount.getUserName().equalsIgnoreCase(request.getWorkrequest_receiver().toString())) {
                        flag1 = 1;
                    }
                }
            }
        }
        if (flag1 == 1) {
            JOptionPane.showMessageDialog(null, "Please complete the existing request before taking a new request");
            return;

        }

        Workrequest_class request = (Workrequest_class) jTable1.getValueAt(selectedRow, 0);
        request.setWorkrequest_receiver(userAccount);
        request.setWorkrequest_status("Assigned");
        log.debug(userAccount+" "+"assigned himself a task");
        generateTable();
        
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        generateTable();
        
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnRequestChemicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestChemicalActionPerformed
        // TODO add your handling code here:
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        log.debug(userAccount+" "+"entering chemical requests page");
        userProcessContainer.add("ViewChemicalsRequestJPanel", new DisplayChemicalRequestPanel(userProcessContainer, userAccount, enterprise, drugOrganization, network));
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_btnRequestChemicalActionPerformed

    private void btnViewLabResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewLabResultsActionPerformed
        // TODO add your handling code here:
        
         CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        log.debug(userAccount+" "+"entering lab requests page");
        userProcessContainer.add("LabResultsJPanel", new LabResultsPanel(userProcessContainer, userAccount, enterprise, drugOrganization, network, business));
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_btnViewLabResultsActionPerformed

    private void btnAddDrugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDrugActionPerformed
        // TODO add your handling code here:
        
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        log.debug(userAccount+" "+"entering drug adding page");
        userProcessContainer.add("AddDrugJPanel", new AddDrugPanel(userProcessContainer, business, userAccount, drugOrganization, enterprise, network));
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_btnAddDrugActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDrug;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRequestChemical;
    private javax.swing.JButton btnViewLabResults;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblDrugSupplierworkspace;
    // End of variables declaration//GEN-END:variables
}
