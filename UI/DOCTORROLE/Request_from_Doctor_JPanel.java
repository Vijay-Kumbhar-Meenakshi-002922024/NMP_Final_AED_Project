/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.DOCTORROLE;

/**
 *
 * @author dsnik
 */

import Doctor.Patient_class;
import Business.EcoCommunity;
import Enterprise.Enterprise_class;
import Network.Network_class;
import Organization.Doctor_org_class;
import Organization.Lab_org_class;
import Organization.org_class;
import User_account.User_account_class;
import WorkQueue.lab_class_workrequest;
import WorkQueue.Workrequest_class;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

public class Request_from_Doctor_JPanel extends javax.swing.JPanel {

    /**
     * Creates new form Request_from_Doctor_JPanel
     */
     private JPanel userProcessContainer;
    private User_account_class account;
    private Doctor_org_class organization;
    private Enterprise_class enterprise;

    private Network_class network;
    private EcoCommunity system;
    private Enterprise_class.EnterpriseType enterpriseType;
    private static Logger log = Logger.getLogger(Request_from_Doctor_JPanel.class);
    private static final String CLASS_NAME = Request_from_Doctor_JPanel.class.getName();
    public Request_from_Doctor_JPanel(JPanel userProcessContainer, User_account_class account, Doctor_org_class organization, Enterprise_class enterprise, EcoCommunity system, Network_class network) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.network = network;
        this.system = system;
         LBL_VALUE.setText(this.enterprise.getOrgName());
        populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LNL_ENTERPRISE = new javax.swing.JLabel();
        LBL_VALUE = new javax.swing.JLabel();
        LBL_NAME = new javax.swing.JLabel();
        LBL_AGE = new javax.swing.JLabel();
        LBL_GENDER = new javax.swing.JLabel();
        TXT_NAME = new javax.swing.JTextField();
        TXT_AGE = new javax.swing.JTextField();
        jComboBox_GENDER = new javax.swing.JComboBox<>();
        LBL_TEST_REQ = new javax.swing.JLabel();
        TXT_TEST_REQ = new javax.swing.JTextField();
        BTN_LAB_REQUEST = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_DOC_REQ_LAB_TEST = new javax.swing.JTable();
        BTN_VIEW_RESULTS = new javax.swing.JButton();
        BTN_CLINICAL_TRIAL = new javax.swing.JButton();
        BTN_REFRESH = new javax.swing.JButton();
        BTN_BACK = new javax.swing.JButton();

        LNL_ENTERPRISE.setText("ENTERPRISE");

        LBL_VALUE.setText("<VALUE>");

        LBL_NAME.setText("PATIENT NAME");

        LBL_AGE.setText("AGE");

        LBL_GENDER.setText("GENDER");

        jComboBox_GENDER.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        LBL_TEST_REQ.setText("TEST REQ");

        BTN_LAB_REQUEST.setText("REQUEST LAB TEST");
        BTN_LAB_REQUEST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_LAB_REQUESTActionPerformed(evt);
            }
        });

        jTable_DOC_REQ_LAB_TEST.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PATIENT NAME", "AGE", "GENDER", "MESSAGE", "RECEIVER", "STATUS", "NEW DRUG", "CLINICAL TRIAL"
            }
        ));
        jScrollPane1.setViewportView(jTable_DOC_REQ_LAB_TEST);

        BTN_VIEW_RESULTS.setText("VIEW RESULTS");
        BTN_VIEW_RESULTS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_VIEW_RESULTSActionPerformed(evt);
            }
        });

        BTN_CLINICAL_TRIAL.setText("CLINICAL TRIAL");
        BTN_CLINICAL_TRIAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_CLINICAL_TRIALActionPerformed(evt);
            }
        });

        BTN_REFRESH.setText("REFRESH");
        BTN_REFRESH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_REFRESHActionPerformed(evt);
            }
        });

        BTN_BACK.setText("BACK");
        BTN_BACK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_BACKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LBL_NAME)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LBL_AGE)))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXT_NAME, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXT_AGE, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jComboBox_GENDER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(LBL_GENDER)
                                    .addGap(111, 111, 111)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LBL_TEST_REQ)
                                .addGap(43, 43, 43)
                                .addComponent(TXT_TEST_REQ, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(157, 157, 157)
                            .addComponent(BTN_VIEW_RESULTS)
                            .addGap(101, 101, 101)
                            .addComponent(BTN_CLINICAL_TRIAL)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BTN_REFRESH))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(44, 44, 44)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(LNL_ENTERPRISE)
                                    .addGap(120, 120, 120)
                                    .addComponent(LBL_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BTN_BACK))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BTN_LAB_REQUEST)
                        .addGap(192, 192, 192)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LNL_ENTERPRISE)
                    .addComponent(LBL_VALUE))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTN_VIEW_RESULTS)
                    .addComponent(BTN_CLINICAL_TRIAL)
                    .addComponent(BTN_REFRESH))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBL_NAME)
                    .addComponent(TXT_NAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LBL_GENDER)
                    .addComponent(jComboBox_GENDER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBL_AGE)
                    .addComponent(TXT_AGE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LBL_TEST_REQ)
                    .addComponent(TXT_TEST_REQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(BTN_LAB_REQUEST)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BTN_BACK)
                .addContainerGap(289, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_LAB_REQUESTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_LAB_REQUESTActionPerformed
        // TODO add your handling code here:
         String message = TXT_TEST_REQ.getText().trim();
        String patientName = TXT_NAME.getText();
        String GENDER = jComboBox_GENDER.getSelectedItem().toString();
        if(jComboBox_GENDER.getSelectedIndex()<=0)
        {
            JOptionPane.showMessageDialog(null, "Please select the sex");
            return;
        }
        if(message.equals(""))
        {
             JOptionPane.showMessageDialog(null, "Write the test need to be performed");
             return;
        }
        int age ;
         try {
             age=Integer.parseInt(TXT_AGE.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Age must be integer!");
            return;
        }
       
        

        lab_class_workrequest request = new lab_class_workrequest();
        request.setMessage(message);
        request.setSender(account);
        request.setStatus("Sent");
        request.setPatient_Name(patientName);
        Patient_class patient = new Patient_class();
        patient.setPatient_Name(patientName);
        patient.setAge(age);
        patient.setTest(message);
        patient.setSex(GENDER);
        request.setPatient(patient);

        org_class org = null;
        for (org_class organization : enterprise.getOrg_Diectory().getOrgList()) {
            if (organization instanceof Lab_org_class) {
                org = organization;
                break;
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
            log.debug("sent request to Lab");
        }
        populateRequestTable();
        JOptionPane.showMessageDialog(null, "Test has been requested successfully");
        TXT_NAME.setText("");
        TXT_AGE.setText("");
        jComboBox_GENDER.setSelectedIndex(0);
        TXT_TEST_REQ.setText("");
        
    }//GEN-LAST:event_BTN_LAB_REQUESTActionPerformed

    private void BTN_REFRESHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_REFRESHActionPerformed
        // TODO add your handling code here:
         populateRequestTable();
    }//GEN-LAST:event_BTN_REFRESHActionPerformed

    private void BTN_BACKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_BACKActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DOCTOR_WORK_AREA_JPanel dwjp = (DOCTOR_WORK_AREA_JPanel) component;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BTN_BACKActionPerformed

    private void BTN_VIEW_RESULTSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_VIEW_RESULTSActionPerformed
        // TODO add your handling code here:
         int selectedRow = jTable_DOC_REQ_LAB_TEST.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"please select a row to view results");
            return;
        }     
 
        lab_class_workrequest request = (lab_class_workrequest) jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 0);
        System.out.println(jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 5));
        System.out.println(!(jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 5).toString().toLowerCase().equalsIgnoreCase("completed")));
        
          if(jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 6)==null)
        {
            JOptionPane.showMessageDialog(null, "Results need to be generated by lab assistant");
            return;
        }
         int flag=0;
         if((jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 5).toString().equalsIgnoreCase("completed"))){
            
            flag++;
            
        }
         if((jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 5).toString().equalsIgnoreCase("ClinicalTrail"))){            
            flag++;
            
        }
         System.out.println(flag+"clinical");
         if(flag==0)
         {
             JOptionPane.showMessageDialog(this, "Lab results are  not yet returned");
             return;
         }
        
         REQUEST_LAB_TEST_JPanel processWorkRequestJPanel = new REQUEST_LAB_TEST_JPanel(userProcessContainer, request);
        userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
        log.debug("adding request to lab assistant");
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_BTN_VIEW_RESULTSActionPerformed

    private void BTN_CLINICAL_TRIALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_CLINICAL_TRIALActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable_DOC_REQ_LAB_TEST.getSelectedRow();

        if (selectedRow < 0) {
             JOptionPane.showMessageDialog(null,"please select a row for clinical trail");
            return;
        }
       

        lab_class_workrequest request = (lab_class_workrequest) jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 0);
         if(jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 6)==null || jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 6) == "N/A(Drug Exists)")
        {
            JOptionPane.showMessageDialog(null, "Clinical trail cannot be performed on this patient");
            return;
        }
        
         
        
        if(jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 7)!=null)
        {
            JOptionPane.showMessageDialog(null, "Clinical trail was already performed on this patient");
            return;
        }
        
         int flag=0;
         if((jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 5).toString().equalsIgnoreCase("completed"))){
            
            flag++;
            
        }
         if((jTable_DOC_REQ_LAB_TEST.getValueAt(selectedRow, 5).toString().equalsIgnoreCase("ClinicalTrail"))){            
            flag++;
            
        }
         System.out.println(flag+"clinical");
         if(flag==0)
         {
             JOptionPane.showMessageDialog(this, "Lab test results are yet returned");
             return;
             
         }
         
        request.setStatus("ClinicalTrail");

        Clinical_Trial_JPanel clincalTrailJPanel = new Clinical_Trial_JPanel(userProcessContainer, request);
        userProcessContainer.add("clincalTrailJPanel", clincalTrailJPanel);
        log.debug("entering clinical Page");
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_BTN_CLINICAL_TRIALActionPerformed

    void populateRequestTable() {
     DefaultTableModel model = (DefaultTableModel) jTable_DOC_REQ_LAB_TEST.getModel();

        model.setRowCount(0);
        for (Workrequest_class request : account.getWorkQueue().getWorkRequestList()) {
            if (request instanceof LabTestWorkRequest) {
                Object[] row = new Object[8];
                row[0] = ((LabTestWorkRequest) request);
                row[1] = ((LabTestWorkRequest) request).getPatient().getAge();
                row[2] = ((LabTestWorkRequest) request).getPatient().getSex();
                row[3] = request.getMessage();

                row[4] = request.getReceiver();
                row[5] = request.getStatus();
                String result = ((LabTestWorkRequest) request).getPatient().getNewDrug();
                if(request.getReceiver()==null||request.getReceiver().equals("Processing"))
                {
                     row[6]=null;
                }else
                {
                row[6] = result == null ? "N/A(Drug Exists)" : result;
                }
                row[7] = ((LabTestWorkRequest) request).getPatient().getClinicalStatus();

                model.addRow(row);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_BACK;
    private javax.swing.JButton BTN_CLINICAL_TRIAL;
    private javax.swing.JButton BTN_LAB_REQUEST;
    private javax.swing.JButton BTN_REFRESH;
    private javax.swing.JButton BTN_VIEW_RESULTS;
    private javax.swing.JLabel LBL_AGE;
    private javax.swing.JLabel LBL_GENDER;
    private javax.swing.JLabel LBL_NAME;
    private javax.swing.JLabel LBL_TEST_REQ;
    private javax.swing.JLabel LBL_VALUE;
    private javax.swing.JLabel LNL_ENTERPRISE;
    private javax.swing.JTextField TXT_AGE;
    private javax.swing.JTextField TXT_NAME;
    private javax.swing.JTextField TXT_TEST_REQ;
    private javax.swing.JComboBox<String> jComboBox_GENDER;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_DOC_REQ_LAB_TEST;
    // End of variables declaration//GEN-END:variables
}
